@model DocumentManagementSystem.Models.ViewModels.Documents.Edit.Edit

@{
    ViewBag.Title = "文档-编辑";
}

<ul class="breadcrumb">
    <li>@Html.ActionLink("主界面", "Index", "Home", null, null)</li>
    <li>@Html.ActionLink("文档", "Index", "Documents", null, null)</li>
    @Html.Action("BreadField", new { Model.DocumentId, activeCurrentNode = true })
</ul>

<div>
    <h2>@ViewBag.Title</h2>
</div>

<div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.DocumentId)
            @Html.HiddenFor(model => model.ParentDocumentId)

            <div class="form-group">
                @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NodeName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NodeName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NodeName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DocumentTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input name="DocumentTime" type="date" value="@(Model.DocumentTime?.ToString("yyyy-MM-dd"))" class="form-control" />
                    @Html.ValidationMessageFor(model => model.DocumentTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinutesToRead, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MinutesToRead, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinutesToRead, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(Model => Model.Remarks, new { htmlAttributes = new { @class = "form-control" }, cols = "50", rows = "10" })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-default">
                        <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>
                        确定
                    </button>
                    <a href="@Url.Action("Delete", new { id = Model.DocumentId })" class="btn btn-danger">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                        删除
                    </a>
                </div>
            </div>
        </div>
    }
</div>

<div>
    <p>
        <a href="@Url.Action("Details",new { id=Model.DocumentId})" class="btn btn-default">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            返回
        </a>
    </p>
</div>